THREAD PANIC PanicInfo {
    payload: Any,
    message: Some(
        called `Result::unwrap()` on an `Err` value: Os { code: 98, kind: AddrInUse, message: "Address already in use" },
    ),
    location: Location {
        file: "src/libcore/result.rs",
        line: 1187,
        col: 5,
    },
}
thread 'sim2h-tokio-thread' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 98, kind: AddrInUse, message: "Address already in use" }', src/libcore/result.rs:1187:5
stack backtrace:
   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
   1: core::fmt::write
   2: std::io::Write::write_fmt
   3: std::panicking::default_hook::{{closure}}
   4: std::panicking::default_hook
   5: <sim2h::SET_THREAD_PANIC_FATAL as core::ops::deref::Deref>::deref::__static_ref_initialize::{{closure}}
   6: std::panicking::rust_panic_with_hook
   7: std::panicking::continue_panic_fmt
   8: rust_begin_unwind
   9: core::panicking::panic_fmt
  10: core::result::unwrap_failed
  11: sim2h::Sim2h::new
  12: <std::future::GenFuture<T> as core::future::future::Future>::poll
  13: std::panicking::try::do_call
  14: __rust_maybe_catch_panic
  15: tokio::task::raw::poll
  16: tokio::runtime::thread_pool::worker::GenerationGuard::run_task
  17: tokio::runtime::thread_pool::worker::Worker::run
  18: std::panicking::try::do_call
  19: __rust_maybe_catch_panic
  20: tokio::task::raw::poll
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
